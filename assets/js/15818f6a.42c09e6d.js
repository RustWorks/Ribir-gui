"use strict";(self.webpackChunkribir_website=self.webpackChunkribir_website||[]).push([[326],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>s});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},k="mdxType",N={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),k=m(a),d=i,s=k["".concat(o,".").concat(d)]||k[d]||N[d]||l;return a?n.createElement(s,r(r({ref:t},u),{},{components:a})):n.createElement(s,r({ref:t},u))}));function s(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=d;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[k]="string"==typeof e?e:i,r[1]=p;for(var m=2;m<l;m++)r[m]=a[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8419:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>k,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var n=a(7462),i=(a(7294),a(3905));const l={sidebar_position:1},r="Full builtin fields list",p={unversionedId:"builtin_widget/declare_builtin_fields",id:"builtin_widget/declare_builtin_fields",title:"Full builtin fields list",description:"- performed_layout : [Box  FnMut(LifeCycleCtx ) >]",source:"@site/../docs/builtin_widget/declare_builtin_fields.md",sourceDirName:"builtin_widget",slug:"/builtin_widget/declare_builtin_fields",permalink:"/docs/builtin_widget/declare_builtin_fields",draft:!1,editUrl:"https://github.com/RibirX/Ribir/tree/master/website/../docs/builtin_widget/declare_builtin_fields.md",tags:[],version:"current",lastUpdatedBy:"sologeek",lastUpdatedAt:1674964251,formattedLastUpdatedAt:"Jan 29, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Built-in Widget",permalink:"/docs/category/built-in-widget"},next:{title:"Project Practice",permalink:"/docs/category/project-practice"}},o={},m=[],u={toc:m};function k(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"full-builtin-fields-list"},"Full builtin fields list"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"performed_layout : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Box < dyn for < 'r > FnMut(LifeCycleCtx < 'r >) >"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"action perform after widget performed layout."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"pointer_down : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut PointerEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler for the pointer down event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"pointer_up : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut PointerEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler for the pointer up event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"pointer_move : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut PointerEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler for the pointer move event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"tap : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut PointerEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler for the pointer tap event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"double_tap : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Box < dyn for < 'r > FnMut(& 'r mut PointerEvent) >"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler for the pointer double tap event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"tripe_tap : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Box < dyn for < 'r > FnMut(& 'r mut PointerEvent) >"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler for the pointer triple tap event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"x_times_tap : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"(u8, Box < dyn for < 'r > FnMut(& 'r mut PointerEvent) >)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler for the pointer ",(0,i.kt)("inlineCode",{parentName:"li"},"x")," times tap event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"pointer_cancel : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut PointerEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler to process pointer cancel event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"pointer_enter : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut PointerEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler when pointer enter this widget."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"pointer_leave : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut PointerEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler when pointer leave this widget."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"auto_focus : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"bool"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Indicates whether the widget should automatically get focus when the window loads."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"tab_index : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"i16"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"indicates that widget can be focused, and where it participates in sequential keyboard navigation (usually with the Tab key, hence the name."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"focus : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut FocusEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler to process focus event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"blur : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut FocusEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler to process blur event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"focus_in : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut FocusEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler to process focusin event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"focus_out : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut FocusEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler to process focusout event."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"key_down : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut KeyboardEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler when keyboard press down."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"key_up : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut KeyboardEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler when a key is released."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"char : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut CharEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler when received a unicode character."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"wheel : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl FnMut(& mut WheelEvent)"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the event handler when user moving a mouse wheel or similar input device."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"box_fit : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"BoxFit"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"set how its child should be resized to its box."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"padding : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"EdgeInsets"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"set the padding area on all four sides of a widget."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"background : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Brush"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the background of the widget box."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"border : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Border"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the border of the widget which draw above the background"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"border_radius : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Radius"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify how rounded the corners have of the widget."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"cursor : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"CursorIcon"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"assign cursor to the widget."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"margin : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"impl EdgeInsets"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"expand space around widget wrapped."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"scrollable : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Scrollable"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"enumerate to describe which direction allow widget to scroll."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"scroll_pos : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Point"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specify the scroll position of this widget, also means that the host widget scrollable."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"transform : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Transform"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"A widget that applies a transformation its child. Doesn't change size, only apply painting"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"h_align : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"HAlign"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"describe how widget align to its box in x-axis."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"v_align : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"VAlign"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"describe how widget align to its box in y-axis."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"left_anchor : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"PositionUnit"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"use to anchor child constraints with the left edge of parent widget."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"right_anchor : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"PositionUnit"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"use to anchor child constraints with the right edge of parent widget."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"top_anchor : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"PositionUnit"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"use to anchor child constraints with the top edge of parent widget"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"bottom_anchor : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"PositionUnit"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"use to anchor child constraints with the bottom edge of parent widget."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"visible : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"bool"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Whether to show or hide a child"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"opacity : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"f32"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"mounted : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Box < dyn for < 'r > FnMut(LifeCycleCtx < 'r >, MountedType) >"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"action perform after widget be added to the widget tree."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"disposed : ","[",(0,i.kt)("inlineCode",{parentName:"p"},"Box < dyn for < 'r > FnMut(LifeCycleCtx < 'r >, DisposedType) >"),"]"," "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"action perform after widget remove from widget tree."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn request_focus(& self)")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"request the this node to be focused."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn unfocus(& self)")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"removes the focus from this node."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn has_focus(& self) -> bool")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return if the widget has focus."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn mouse_hover(& self) -> bool")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return if the pointer is hover on the widget"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn pointer_pressed(& self) -> bool")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return if the widget is pressed"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn layout_rect(& self) -> Rect")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return the rect after layout of the widget"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn layout_pos(& self) -> Point")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return the position relative to parent after layout of the widget"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn layout_size(& self) -> Size")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return the size after layout of the widget"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn layout_left(& self) -> f32")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return the left position relative parent after layout of the widget"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn layout_top(& self) -> f32")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return the top position relative parent after layout of the widget"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn layout_width(& self) -> f32")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return the width after layout of the widget"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn layout_height(& self) -> f32")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return the height after layout of the widget"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn scroll_view_size(& self) -> Size")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return the scroll view of the scrollable widget"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn scroll_content_size(& self) -> Size")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"return the content widget size of the scrollable widget."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"fn jump_to(& mut self, left_top : Point)")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"jump to the special position.")))))}k.isMDXComponent=!0}}]);